<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee.xsd">

	<context:component-scan base-package="sems.controls">
	  <context:exclude-filter type="regex" 
	     expression="sems.controls.ajax.*"/>
	</context:component-scan>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<!-- DispatcherServlet에게 JSP의 위치를 알려줌 => DispatcherServlet은 실제 자신이 직접 JSP를 
		인클루드 하지 않는다. => 뷰를 찾아서 실행해 주는 부하에게 맡긴다. (ViewResolver) => 즉, 뷰 해결사에게 JSP가 
		있는 위치를 말해야 한다. => 스프링에서는 다양한 ViewResolver를 제공한다. -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>


</beans>












































