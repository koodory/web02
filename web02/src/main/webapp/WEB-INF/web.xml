<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="
          http://java.sun.com/xml/ns/javaee 
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>web02</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- <param-value>/WEB-INF/applicationContext*.xml</param-value> -->
		<param-value>classpath:beans.xml</param-value>
	</context-param>


	<!-- ServletContextListener 등록 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 필터 선언 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>AuthFilter</filter-name>
		<filter-class>sems.filters.AuthFilter</filter-class>
	</filter>

	<!-- 필터를 적용할 URL을 선언 -->
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>*.bit</url-pattern> <!-- '?' 전에 끝나는 URL -->
	</filter-mapping>
	<!-- <filter-mapping> <filter-name>AuthFilter</filter-name> <url-pattern>*.bit</url-pattern> 
		</filter-mapping> -->

	<servlet>
		<servlet-name>bit</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- DispatcherServlet을 위한 빈 설정 파일의 기본 이름이 "서블릿이름-servlet.xml"로 되어 있다면 
			생략해도 된다. 
			<init-param> 
			 <param-name>contextConfigLocation</param-name> 
			 <param-value>/WEB-INF/bit-servlet.xml</param-value> 
			</init-param> -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>ajax</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>bit</servlet-name>
		<url-pattern>*.bit</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
    <servlet-name>ajax</servlet-name>
    <url-pattern>*.ajax</url-pattern>
  </servlet-mapping>

	<!-- http://localhost:9999/web01/subject 위와 같이 클라이언트의 요청 URL이 폴더까지만 지정된다면 
		해당 폴더에서 다음 파일들을 찾아서 보내 준다. -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!-- 톰캣 서버에 설정한 DataSource를 참조 -->
	<resource-ref>
		<description>DB Connection</description>
		<res-ref-name>jdbc/studydb</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
</web-app>















